name: ZMK Firmware Build with Mouse Gesture Support

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  matrix:
    runs-on: ubuntu-latest
    name: Fetch Build Keyboards
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install yaml2json
        run: python3 -m pip install remarshal
      - id: matrix
        name: Fetch Build Matrix
        run: |
          matrix=$(yaml2json build.yaml | jq -c .)
          echo "matrix=${matrix}" >> $GITHUB_OUTPUT
          echo "${matrix}"

  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
    needs: matrix
    name: Build ZMK firmware
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Prepare variables
        shell: sh -x {0}
        env:
          board: ${{ matrix.board }}
          shield: ${{ matrix.shield }}
          artifact-name: ${{ matrix.artifact-name }}
        run: |
          echo "zephyr-version=${ZEPHYR_VERSION}" >> $GITHUB_ENV
          echo "extra-cmake-args=${shield:+-DSHIELD=\"$shield\"}" >> $GITHUB_ENV
          echo "display-name=${shield:+$shield - }${board}" >> $GITHUB_ENV
          echo "artifact-name=${artifact-name:-${shield:+$shield-}$board-zmk}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache west modules
        uses: actions/cache@v4
        env:
          cache-name: cache-zephyr-${{ env.zephyr-version }}-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/west.yml', '**/build.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: West Init
        run: west init -l config

      - name: West Update
        run: west update

      - name: West Zephyr export
        run: west zephyr-export

      - name: West Build (${{ env.display-name }})
        shell: sh -x {0}
        run: |
          west build -s app -b ${{ matrix.board }} -- -DZMK_CONFIG="${GITHUB_WORKSPACE}/config" ${{ env.extra-cmake-args }} ${{ matrix.cmake-args }}

      - name: ${{ env.display-name }} Kconfig file
        run: grep -v -E "^#|^$" build/zephyr/.config | sort

      - name: Rename artifacts
        shell: sh -x {0}
        run: |
          mkdir build/artifacts
          if [ -f build/zephyr/zmk.uf2 ]
          then
            cp build/zephyr/zmk.uf2 "build/artifacts/${{ env.artifact-name }}.uf2"
          elif [ -f build/zephyr/zmk.hex ]
          then
            cp build/zephyr/zmk.hex "build/artifacts/${{ env.artifact-name }}.hex"
          fi

      - name: Archive (${{ env.display-name }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact-name }}
          path: build/artifacts
